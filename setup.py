#!/usr/bin/env python3
"""
Script de configura√ß√£o inicial do Sistema de An√°lise de Curr√≠culos
"""

import os
import sys
import subprocess
from pathlib import Path

def run_command(command, description):
    """Executa um comando e mostra o resultado"""
    print(f"\nüîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} conclu√≠do com sucesso!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao {description.lower()}: {e}")
        print(f"Sa√≠da de erro: {e.stderr}")
        return False

def create_env_file():
    """Cria o arquivo .env com configura√ß√µes b√°sicas"""
    env_file = Path('.env')
    if env_file.exists():
        print("‚ö†Ô∏è  Arquivo .env j√° existe. Pulando cria√ß√£o...")
        return True
    
    print("\nüìù Criando arquivo .env...")
    
    # Gerar chave secreta do Django
    try:
        from django.core.management.utils import get_random_secret_key
        secret_key = get_random_secret_key()
    except ImportError:
        import secrets
        secret_key = secrets.token_urlsafe(50)
    
    env_content = f"""# Configura√ß√µes do Django
SECRET_KEY={secret_key}
DEBUG=True

# API Google Gemini
GEMINI_API_KEY=sua_chave_da_api_gemini_aqui

# Configura√ß√µes de Banco de Dados (opcional)
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# Configura√ß√µes de Email (opcional)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=seu_email@gmail.com
# EMAIL_HOST_PASSWORD=sua_senha_de_app
"""
    
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print("‚úÖ Arquivo .env criado com sucesso!")
        print("‚ö†Ô∏è  IMPORTANTE: Configure sua chave da API Gemini no arquivo .env")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao criar arquivo .env: {e}")
        return False

def main():
    """Fun√ß√£o principal do script de setup"""
    print("üöÄ Configura√ß√£o inicial do Sistema de An√°lise de Curr√≠culos")
    print("=" * 60)
    
    # Verificar se estamos no diret√≥rio correto
    if not Path('manage.py').exists():
        print("‚ùå Erro: Execute este script no diret√≥rio raiz do projeto (onde est√° o manage.py)")
        sys.exit(1)
    
    # Verificar se o ambiente virtual est√° ativo
    if not hasattr(sys, 'real_prefix') and not (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        print("‚ö†Ô∏è  Aviso: Ambiente virtual n√£o detectado.")
        print("   Recomendamos usar um ambiente virtual para este projeto.")
        response = input("   Continuar mesmo assim? (s/N): ")
        if response.lower() != 's':
            print("‚ùå Setup cancelado.")
            sys.exit(1)
    
    # Instalar depend√™ncias
    if not run_command("pip install -r requirements.txt", "Instalando depend√™ncias"):
        print("‚ùå Falha na instala√ß√£o das depend√™ncias. Verifique se o requirements.txt existe.")
        sys.exit(1)
    
    # Criar arquivo .env
    if not create_env_file():
        print("‚ùå Falha na cria√ß√£o do arquivo .env.")
        sys.exit(1)
    
    # Executar migra√ß√µes
    if not run_command("python manage.py migrate", "Executando migra√ß√µes do banco de dados"):
        print("‚ùå Falha nas migra√ß√µes. Verifique as configura√ß√µes do banco de dados.")
        sys.exit(1)
    
    # Criar superusu√°rio
    print("\nüë§ Cria√ß√£o do superusu√°rio")
    print("   Este usu√°rio ser√° usado para acessar o painel administrativo.")
    response = input("   Criar superusu√°rio agora? (S/n): ")
    if response.lower() != 'n':
        run_command("python manage.py createsuperuser", "Criando superusu√°rio")
    
    print("\n" + "=" * 60)
    print("üéâ Configura√ß√£o conclu√≠da com sucesso!")
    print("\nüìã Pr√≥ximos passos:")
    print("1. Configure sua chave da API Gemini no arquivo .env")
    print("2. Execute: python manage.py runserver")
    print("3. Acesse: http://localhost:8000")
    print("4. Para administra√ß√£o: http://localhost:8000/admin/")
    print("\nüìö Documenta√ß√£o completa: README.md")
    print("=" * 60)

if __name__ == "__main__":
    main() 